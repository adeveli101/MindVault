
plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {

    def keystorePropertiesFile = rootProject.file("key.properties") // key.properties dosyanızın PROJE KÖK DİZİNİNE göre yolunu buraya yazın
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    namespace = "com.adev.mindvault"
    compileSdk 35
    ndkVersion = '27.1.12297006'


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17

        coreLibraryDesugaringEnabled true

    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.adev.mindvault"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 24
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode.toInteger()
        versionName = flutter.versionName
        manifestPlaceholders = [applicationName: "android.app.Application"]
        multiDexEnabled true
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                storeFile file(keystoreProperties['storeFile']) // key.properties'teki storeFile yolu
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            } else {
                // key.properties bulunamazsa varsayılan debug imzalamasını kullan
                // veya bir hata fırlatabilirsiniz.
                // Önemli: Google Play'e yüklemek için MUTLAKA kendi anahtarınızla imzalamalısınız.
                signingConfig signingConfigs.debug
                println "*** release imzalama için key.properties bulunamadı, debug anahtarı kullanılıyor! ***"
            }
        }
    }

    buildTypes {
        release {
            // TODO: Uygulamanızı yayınlamadan önce ProGuard/R8 ayarlarını yapılandırın.
            // signingConfig signingConfigs.debug // <-- BU SATIRI SİLİN VEYA YORUM SATIRI YAPIN
            signingConfig signingConfigs.release // <-- BU SATIRI EKLEYİN
            minifyEnabled true // Kod küçültme ve gizleme için önerilir
            shrinkResources true // Kullanılmayan kaynakları kaldırmak için önerilir
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildToolsVersion '34.0.0'
}

flutter {
    source = "../.."
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation platform('com.google.firebase:firebase-bom:33.13.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.android.billingclient:billing:7.1.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5' // En güncel sürümü kontrol edebilirsiniz

    implementation 'androidx.window:window:1.3.0'
    implementation 'androidx.window:window-java:1.3.0'

}
